// Generated by CoffeeScript 1.4.0
(function() {
  var root;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  root.CalculationRow = (function() {

    function CalculationRow(lineNumber, operator, values) {
      this.lineNumber = lineNumber;
      this.operator = operator;
      this.values = values;
    }

    CalculationRow.prototype.calculate = function() {
      switch (this.operator) {
        case "SUM":
          return this.sum();
        case "MIN":
          return this.min();
        case "MAX":
          return this.max();
        case "AVERAGE":
          return this.average();
      }
    };

    CalculationRow.prototype.sum = function() {
      return this.values.reduce(function(t, s) {
        return t + s;
      });
    };

    CalculationRow.prototype.min = function() {
      return Math.min.apply(this, this.values);
    };

    CalculationRow.prototype.max = function() {
      return Math.max.apply(this, this.values);
    };

    CalculationRow.prototype.average = function() {
      return Math.round((this.values.reduce(function(t, s) {
        return t += s;
      })) / this.values.length);
    };

    return CalculationRow;

  })();

  root.validateInput = function(inputString) {
    var validRegex;
    validRegex = /(\d\#-(\bSUM\b|\bAVERAGE\b|\bMIN\b|\bMAX\b):(\s*\d+)(,\s*\d+\s*)*)/;
    return !!inputString && validRegex.test(inputString.toUpperCase());
  };

  root.stripWhiteSpaceAndChangeToUpper = function(inputString) {
    return inputString.replace(/^\s+|s+$/g, "");
  };

  root.parseInputText = function(inputString) {
    var rows;
    return rows = inputString.match(/\r\n|[\n\v\f\r\x85\u2028\u2029]/);
  };

}).call(this);
